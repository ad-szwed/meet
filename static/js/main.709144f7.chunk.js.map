{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","mock-data.js","api.js","NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","state","showMore","this","setState","event","description","className","summary","creator","email","start","dateTime","location","desc","type","onClick","showText","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","onChange","onFocus","style","display","mockData","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","extractLocations","console","log","Set","checkToken","accessToken","result","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","NumberOfEvents","eventCount","handleEventInputChanged","name","App","numberOfEvents","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.709144f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMore: false,\r\n    };\r\n  }\r\n\r\n  showMore() {\r\n    const { showMore } = this.state;\r\n    if (showMore === false) {\r\n      this.setState({ showMore: true });\r\n    } else {\r\n      this.setState({ showMore: false });\r\n    }\r\n  }\r\n\r\n  showText() {\r\n    const { showMore } = this.state;\r\n    if (showMore === false) {\r\n      return 'Show More';\r\n    }\r\n    return 'Show Less';\r\n  }\r\n\r\n  desc(event) {\r\n    const { showMore } = this.state;\r\n    if (showMore === false) {\r\n      return '';\r\n    }\r\n    return event.description;\r\n  }\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"event\">\r\n          <h2>{event.summary}</h2>\r\n          <p>\r\n            <b>Creator:</b>\r\n            {event.creator.email}\r\n          </p>\r\n          <p>\r\n            <b>Start Time:</b>\r\n            {event.start.dateTime}\r\n          </p>\r\n          <p>\r\n            <b>Location:</b>\r\n            {event.location}\r\n          </p>\r\n          <p className=\"description\">{this.desc(event)}</p>\r\n          <button type=\"button\" className=\"details-btn\" onClick={() => { this.showMore(event); }}>\r\n            {this.showText()}\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  }\r\n];\r\n\r\nexport { mockData };","// This function takes an events array, then uses map to create a new array with only locations.\r\n// It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n// The Set will remove all duplicates from the array.\r\n\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n// will remove the code from the URL once finished with it\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\n// getting the access token\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://ig8q1yzl2d.execute-api.eu-central-1.amazonaws.com/dev/api/token/{code}' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const extractLocations = (events) => {\r\n  console.log(events, '!!events');\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n// if using localhost, return the mock data; otherwise, use the real API\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://ig8q1yzl2d.execute-api.eu-central-1.amazonaws.com/dev/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://ig8q1yzl2d.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    eventCount: 32,\r\n  };\r\n\r\n  // change number of events list\r\n  handleEventInputChanged = (event) => {\r\n    const eventCount = event.target.value;\r\n    if (eventCount < 1) {\r\n      return this.setState({\r\n        eventCount: 32\r\n      });\r\n    } else {\r\n      this.setState({\r\n        eventCount\r\n      });\r\n      this.props.updateEvents('', eventCount);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='numberOfEvents'>\r\n        <label>Number of Events</label>\r\n        <input\r\n          type='number'\r\n          name='numberOfEvents'\r\n          className='numberOfEventsInput'\r\n          value={this.state.eventCount}\r\n          onChange={this.handleEventInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport { getEvents, extractLocations } from './api';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport './nprogress.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all') ?\r\n        events :\r\n        events.filter((event) => event.location === location);\r\n      this.setState({\r\n        events: locationEvents\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch\r\n          locations={this.state.locations} updateEvents={this.updateEvents} />\r\n        <EventList\r\n          events={this.state.events} />\r\n        <NumberOfEvents\r\n          numberOfEvents={this.state.numberOfEvents}\r\n          updateEvents={this.updateEvents} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}