{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","mock-data.js","api.js","NumberOfEvents.js","WelcomeScreen.jsx","EventGenre.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","state","showMore","this","setState","event","description","className","summary","creator","email","start","dateTime","location","desc","type","onClick","showText","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","suggestion","updateEvents","numberOfEvents","onChange","placeholder","onFocus","display","handleItemClicked","React","mockData","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","extractLocations","console","log","Set","checkToken","accessToken","result","getEvents","NProgress","navigator","onLine","getItem","done","JSON","parse","href","startsWith","getAccessToken","token","url","axios","get","data","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","NumberOfEvents","eventCount","handleEventInputChanged","errorText","name","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","EventGenre","useState","setData","useEffect","genre","split","includes","COLORS","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","Cell","App","undefined","locationEvents","slice","getData","number","city","shift","mounted","isTokenValid","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ebde1fd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMore: false,\r\n    };\r\n  }\r\n\r\n  showMore() {\r\n    const { showMore } = this.state;\r\n    if (showMore === false) {\r\n      this.setState({ showMore: true });\r\n    } else {\r\n      this.setState({ showMore: false });\r\n    }\r\n  }\r\n\r\n  showText() {\r\n    const { showMore } = this.state;\r\n    if (showMore === false) {\r\n      return 'Show More';\r\n    }\r\n    return 'Show Less';\r\n  }\r\n\r\n  desc(event) {\r\n    const { showMore } = this.state;\r\n    if (showMore === false) {\r\n      return '';\r\n    }\r\n    return event.description;\r\n  }\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"event\">\r\n          <h2>{event.summary}</h2>\r\n          <p>\r\n            <b>Creator:</b>\r\n            {event.creator.email}\r\n          </p>\r\n          <p>\r\n            <b>Start Time:</b>\r\n            {event.start.dateTime}\r\n          </p>\r\n          <p>\r\n            <b>Location:</b>\r\n            {event.location}\r\n          </p>\r\n          <p className=\"description\">{this.desc(event)}</p>\r\n          <button type=\"button\" className=\"details-btn\" onClick={() => { this.showMore(event); }}>\r\n            {this.showText()}\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nexport { InfoAlert };\r\nexport { WarningAlert };\r\nexport { ErrorAlert };","import React from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends React.Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: false\r\n  }\r\n\r\n  // update state of city in text input\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try again',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked(suggestion) {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n      infoText: '',\r\n    });\r\n    this.props.updateEvents(suggestion, this.props.numberOfEvents);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          placeholder=\"Search for city...\"\r\n          onFocus={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n          onClick={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  }\r\n];\r\n\r\nexport { mockData };","// This function takes an events array, then uses map to create a new array with only locations.\r\n// It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n// The Set will remove all duplicates from the array.\r\n\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n// will remove the code from the URL once finished with it\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\n// getting the access token\r\nexport const getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://ig8q1yzl2d.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const extractLocations = (events) => {\r\n  console.log(events, '!!events');\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n// if using localhost, return the mock data; otherwise, use the real API\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (!navigator.onLine) { // check whether user is offline\r\n    const events = await localStorage.getItem(\"lastEvents\"); // load stored event\r\n    NProgress.done();\r\n    return events?JSON.parse(events).events:[];\r\n  } \r\n  \r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  \r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n\r\n    removeQuery();\r\n    const url = `https://ig8q1yzl2d.execute-api.eu-central-1.amazonaws.com/dev/get-events/${token}`\r\n    const result = await axios.get(url);\r\n\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://ig8q1yzl2d.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    eventCount: 32,\r\n  };\r\n\r\n  // change number of events list\r\n  handleEventInputChanged = (event) => {\r\n    const eventCount = event.target.value;\r\n    if (eventCount < 1) {\r\n      return this.setState({\r\n        eventCount: \"\",\r\n        errorText: `Select number between 1 and 32`,\r\n      });\r\n    } else if (eventCount > 32) {\r\n      return this.setState({\r\n        eventCount: \"\",\r\n        errorText: `Select number between 1 and 32`,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        eventCount,\r\n        errorText: \"\",\r\n      });\r\n      // this.props.updateEvents(\"\", eventCount);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='numberOfEvents'>\r\n        <label>Number of Events</label>\r\n        <input\r\n          type='number'\r\n          name='numberOfEvents'\r\n          className='numberOfEventsInput'\r\n          value={this.state.eventCount}\r\n          onChange={this.handleEventInputChanged}\r\n        />\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\n\r\nfunction WelcomeScreen(props) {\r\n  return props.showWelcomeScreen ?\r\n    (\r\n      <div className=\"WelcomeScreen\">\r\n        <h1>Welcome to the Meet app</h1>\r\n        <h4>Log in to see upcoming events around the world for full-stack developers</h4>\r\n        <div className=\"button_cont\" align=\"center\">\r\n          <div class=\"google-btn\">\r\n            <div class=\"google-icon-wrapper\">\r\n              <img\r\n              class=\"google-icon\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\r\n              o.svg\"\r\n              alt=\"Google sign-in\"\r\n              />\r\n            </div>\r\n            <button onClick={() => { props.getAccessToken() }}\r\n            rel=\"nofollow noopener\"\r\n            class=\"btn-text\">\r\n            <b>Sign in with google</b>\r\n            </button>\r\n        \r\n        </div>\r\n      </div>\r\n        <a\r\n        href=\"https://ad-szwed.github.io/meet/privacy.html\"\r\n        rel=\"nofollow noopener\">\r\n        Privacy policy\r\n        </a>\r\n      </div>\r\n    )\r\n  : null\r\n}\r\nexport default WelcomeScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\n\r\nconst EventGenre = ({ events }) => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n\r\n      const data = genres.map((genre) => {\r\n        const value = events.filter(({ summary }) =>\r\n          summary.split(' ').includes(genre)\r\n        ).length;\r\n        return { name: genre, value };\r\n      });\r\n      return data;\r\n    };\r\n    setData(() => getData());\r\n  }, [events]);\r\n\r\n  const COLORS = ['#de960b', '#c99d49', '#90681c', '#a5884f', '#e4b862'];\r\n\r\n  return (\r\n    <ResponsiveContainer height={400} >\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} name={entry.name} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  )\r\n\r\n};\r\n\r\n\r\nexport default EventGenre;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport './nprogress.css';\r\nimport { InfoAlert } from './Alert';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport {\r\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\nimport EventGenre from './EventGenre';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32,\r\n    // part of google's verificaiton\r\n    showWelcomeScreen: undefined\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(accessToken)).error\r\n      ? false\r\n      : true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({ events, locations: extractLocations(events) });\r\n        }\r\n      });\r\n    }\r\n    // load events from the storage\r\n    if (!navigator.onLine) {\r\n      this.setState({\r\n        infoText:\r\n          'Your offline, data may not be up to date',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        infoText: '',\r\n      });\r\n    }\r\n\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    console.log(location, \"!! location in app.js\")\r\n    getEvents().then((events) => {\r\n      const locationEvents = location === 'all'\r\n        ? events.slice(0, eventCount)\r\n        : events.filter((event) => event.location === location);\r\n      this.setState({\r\n        events: locationEvents,\r\n      });\r\n    });\r\n  }\r\n\r\n  // getting the data for the chart from mock-data.js   \r\n  getData = () => {\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location).length\r\n      const city = location.split(', ').shift()\r\n      return { city, number };\r\n    })\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n\r\n    // part of google's verification\r\n    if (this.state.showWelcomeScreen === undefined) return <div\r\n      className=\"App\" />\r\n    console.log(this.state.events, \"events render\")\r\n    return (\r\n      <div className=\"App\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <h1 className='eventTitle'>Meet</h1>\r\n        <CitySearch\r\n          locations={this.state.locations} updateEvents={this.updateEvents} />\r\n        <EventGenre events={this.state.events} />\r\n        <ResponsiveContainer height={400} >\r\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\r\n            <CartesianGrid />\r\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\r\n            <YAxis\r\n              allowDecimals={false}\r\n              type=\"number\"\r\n              dataKey=\"number\"\r\n              name=\"number of events\"\r\n            />\r\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n        <EventList\r\n          events={this.state.events} />\r\n        <NumberOfEvents\r\n          numberOfEvents={this.state.numberOfEvents}\r\n          updateEvents={this.updateEvents} />\r\n\r\n        {/* part of google's verification */}\r\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\r\n          getAccessToken={() => { getAccessToken() }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('a6a5b19a0c344f8dab9429408437b3bc').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}